// <auto-generated />
using System;
using Airport.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airport.Migrations
{
    [DbContext(typeof(AirportDataContext))]
    [Migration("20221224224212_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Airport.Models.Plane", b =>
                {
                    b.Property<string>("PlaneName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaneName");

                    b.HasIndex("StationId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Airport.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlaneName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StationName")
                        .HasColumnType("TEXT");

                    b.HasKey("StationId");

                    b.HasIndex("PlaneName")
                        .IsUnique();

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            StationName = "Landing Stage 1"
                        },
                        new
                        {
                            StationId = 2,
                            StationName = "Landing Stage 2"
                        },
                        new
                        {
                            StationId = 3,
                            StationName = "Landing Stage 3"
                        },
                        new
                        {
                            StationId = 4,
                            StationName = "Runway"
                        },
                        new
                        {
                            StationId = 5,
                            StationName = "Arrival Path"
                        },
                        new
                        {
                            StationId = 6,
                            StationName = "Terminal 1"
                        },
                        new
                        {
                            StationId = 7,
                            StationName = "Terminal 2"
                        },
                        new
                        {
                            StationId = 8,
                            StationName = "Departure Path"
                        },
                        new
                        {
                            StationId = 9,
                            StationName = "Take Off"
                        });
                });

            modelBuilder.Entity("Airport.Models.Plane", b =>
                {
                    b.HasOne("Airport.Models.Station", "CurrentStation")
                        .WithMany()
                        .HasForeignKey("StationId");

                    b.Navigation("CurrentStation");
                });

            modelBuilder.Entity("Airport.Models.Station", b =>
                {
                    b.HasOne("Airport.Models.Plane", "CurrentPlane")
                        .WithOne()
                        .HasForeignKey("Airport.Models.Station", "PlaneName");

                    b.Navigation("CurrentPlane");
                });
#pragma warning restore 612, 618
        }
    }
}
